package com.ajian.proxy.service;



import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

/**
 *
 */
public class OrderServiceImplProxy implements InvocationHandler {
    private Object target;
    private Object master;
    private Object hot-fix2;
    private Object "远程仓库修改了一行代码";
    public Object "by git-repository-1 update";
    public OrderServiceImplProxy(Object target){
        this.target = target;
    }
    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        //执行目标方法前 增强代码
        long start = System.currentTimeMillis();
        Object value = method.invoke(target, args);
        long end = System.currentTimeMillis();
        System.out.println(method.getName()+"方法耗时"+(end-start)+"毫秒");
        return value;
    }
}

